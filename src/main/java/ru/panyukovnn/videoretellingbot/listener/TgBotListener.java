package ru.panyukovnn.videoretellingbot.listener;

import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.context.event.EventListener;
import org.springframework.scheduling.annotation.Async;
import org.springframework.stereotype.Service;
import org.telegram.telegrambots.meta.api.objects.Message;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.api.objects.User;
import ru.panyukovnn.videoretellingbot.exception.RetellingException;
import ru.panyukovnn.videoretellingbot.serivce.Summarizer;
import ru.panyukovnn.videoretellingbot.serivce.TgSender;
import ru.panyukovnn.videoretellingbot.serivce.YoutubeSubtitlesExtractor;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;
import java.util.regex.Pattern;

@Slf4j
@Service
@RequiredArgsConstructor
public class TgBotListener {

    private static final int MAX_TG_MESSAGE_SIZE = 4096;
    private static final String YOUTUBE_URL_REGEX = "^(https://)?(www\\.)?(youtube\\.com/watch\\?v=|youtu\\.be/)[\\w-]{11}(&.+)?$";

    private final TgSender tgSender;
    private final Summarizer summarizer;
    private final YoutubeSubtitlesExtractor youtubeSubtitlesExtractor;

    @EventListener(Update.class)
    @Async("tgListenerExecutor")
    public void onUpdate(Update update) {
        Long userId = Optional.ofNullable(update.getMessage())
            .map(Message::getFrom)
            .map(User::getId)
            .orElse(0L);
        String messageText = Optional.ofNullable(update.getMessage())
            .map(Message::getText)
            .map(String::trim)
            .orElse("–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è");

        log.info("Received message from user: {}. Text: {}", userId, messageText);

        Long chatId = Optional.ofNullable(update.getMessage())
            .map(Message::getChatId)
            .orElseThrow();

        try {
            checkYoutubeLink(messageText);

            tgSender.sendMessage(chatId, "–ò–∑–≤–ª–µ–∫–∞—é —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ");

            String subtitles = youtubeSubtitlesExtractor.extractYoutubeVideoSubtitles(messageText);

            tgSender.sendMessage(chatId, "–§–æ—Ä–º–∏—Ä—É—é —Å—Ç–∞—Ç—å—é (—ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω–∏–º–∞—Ç—å –¥–æ 2—Ö –º–∏–Ω—É—Ç)");

            String videoSummary = summarizer.summarizeContent(subtitles);
            String cleanedSummary = changeHashSignsToBoldInMarkdown(videoSummary);

            log.info(cleanedSummary);

            List<String> videoSummarySubMessages = splitTooLongMessage(cleanedSummary);

            videoSummarySubMessages.forEach(videoSummarySubMessage -> tgSender.sendMessage(chatId, videoSummarySubMessage));
        } catch (RetellingException e) {
            log.error("–û—à–∏–±–∫–∞ –±–∏–∑–Ω–µ—Å –ª–æ–≥–∏–∫–∏. id: {}. –°–æ–æ–±—â–µ–Ω–∏–µ: {}", e.getId(), e.getMessage(), e);

            tgSender.sendMessage(chatId, "–í –ø—Ä–æ—Ü–µ—Å—Å–µ —Ä–∞–±–æ—Ç—ã –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞: " + e.getMessage());
        } catch (Exception e) {
            log.error(e.getMessage(), e);

            tgSender.sendMessage(chatId, "–ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è");
        }
    }

    private void checkYoutubeLink(String messageText) {
        boolean validYoutubeVideoLink = Pattern.matches(YOUTUBE_URL_REGEX, messageText);

        if (!validYoutubeVideoLink) {
            throw new RetellingException("824c", "–ù–µ–≤–∞–ª–∏–¥–Ω–∞—è —Å—Å—ã–ª–∫–∞ youtube");
        }
    }

    protected List<String> splitTooLongMessage(String message) {
        List<String> tgMessages = new ArrayList<>();

        String[] lines = message.split("\n", -1); // -1 —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏

        StringBuilder currentChunk = new StringBuilder();

        for (String line : lines) {
            String lineWithNewline = line + "\n";

            if (currentChunk.length() + lineWithNewline.length() > MAX_TG_MESSAGE_SIZE) {
                tgMessages.add(currentChunk.toString());
                currentChunk.setLength(0);
            }

            currentChunk.append(lineWithNewline);
        }

        if (!currentChunk.isEmpty()) {
            tgMessages.add(currentChunk.toString());
        }

        return tgMessages;
    }

    protected String changeHashSignsToBoldInMarkdown(String input) {
        String[] lines = input.split("\n", -1); // -1 —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏

        StringBuilder output = new StringBuilder();

        for (String line : lines) {
            String lineWithNewline = line + "\n";

            if (lineWithNewline.startsWith("#")) {
                String cleaned = lineWithNewline.replaceFirst("^#+", "").trim();
                output.append(cleaned);
            } else {
                output.append(lineWithNewline);
            }
        }

        return output.toString();
    }
}

//# üìå –¢—Ä–∏ –∫–ª—é—á–µ–≤—ã–µ —Å—É—â–Ω–æ—Å—Ç–∏ —Å–∞–º–æ–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏: –∑–∞–¥–∞—á–∏, –ø—Ä–æ–µ–∫—Ç—ã –∏ –∏–¥–µ–∏
//
//–ü—Ä–∏–≤–µ—Ç, –¥—Ä—É–∑—å—è! üëã –°–µ–≥–æ–¥–Ω—è —Ä–∞–∑–±–µ—Ä—ë–º—Å—è —Å –æ—Å–Ω–æ–≤–∞–º–∏ —Å–∞–º–æ–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏. –í–µ–¥—å —á–∞—Å—Ç–æ –º—ã –ø—É—Ç–∞–µ–º **–∑–∞–¥–∞—á–∏**, **–ø—Ä–æ–µ–∫—Ç—ã** –∏ **–∏–¥–µ–∏**, —Å–≤–∞–ª–∏–≤–∞—è –≤—Å—ë –≤ –æ–¥–Ω—É –∫—É—á—É. –ê –ø–æ—Ç–æ–º —É–¥–∏–≤–ª—è–µ–º—Å—è, –ø–æ—á–µ–º—É –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ—Ç—Å—è! üòÖ
//
//## üß† –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞—à –º–æ–∑–≥?
//
//–ü—Ä–µ–∂–¥–µ —á–µ–º –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å—É—â–Ω–æ—Å—Ç—è–º, –≤—Å–ø–æ–º–Ω–∏–º –º–æ–¥–µ–ª—å **–¢–∏–º–∞ –£—Ä–±–∞–Ω–∞** (–µ—Å–ª–∏ –Ω–µ –∑–Ω–∞–µ—Ç–µ, –∫—Ç–æ —ç—Ç–æ ‚Äî –≥—É–≥–ª–∏—Ç–µ –µ–≥–æ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏–µ –Ω–∞ TED üé§).
//
//üîπ **–û–±–µ–∑—å—è–Ω–∫–∞** ‚Äî –∏–º–ø—É–ª—å—Å–∏–≤–Ω–∞—è —á–∞—Å—Ç—å –º–æ–∑–≥–∞, –∫–æ—Ç–æ—Ä–∞—è —Ö–æ—á–µ—Ç —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–π –∑–¥–µ—Å—å –∏ —Å–µ–π—á–∞—Å.
//üîπ **–†–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ç–∏–ø** ‚Äî –Ω–∞—à "–≤–∑—Ä–æ—Å–ª—ã–π" —Ä–µ–∂–∏–º, –∫–æ—Ç–æ—Ä—ã–π —É–º–µ–µ—Ç –ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å.
//üîπ **–ü–∞–Ω–∏—á–µ—Å–∫–∏–π –º–æ–Ω—Å—Ç—Ä** ‚Äî –≤–∫–ª—é—á–∞–µ—Ç—Å—è, –∫–æ–≥–¥–∞ –¥–µ–¥–ª–∞–π–Ω —É–∂–µ –Ω–∞ –Ω–æ—Å—É!
//
//–ë–æ–ª—å—à—É—é —á–∞—Å—Ç—å –≤—Ä–µ–º–µ–Ω–∏ –º—ã –∂–∏–≤—ë–º –≤ —Ä–µ–∂–∏–º–µ **–æ–±–µ–∑—å—è–Ω–∫–∏** ‚Äî –Ω–µ–æ—Å–æ–∑–Ω–∞–Ω–Ω–æ, –∏–º–ø—É–ª—å—Å–∏–≤–Ω–æ. –ü–æ—ç—Ç–æ–º—É –≤–∞–∂–Ω–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, —á—Ç–æ–±—ã –¥–∞–∂–µ –≤ —Ç–∞–∫–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –º—ã –º–æ–≥–ª–∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å.
//
//---
//
//## üìã 1. **–ó–∞–¥–∞—á–∏** ‚Äî "–ù–∞–¥–æ —Å–¥–µ–ª–∞—Ç—å, –Ω–µ –¥—É–º–∞—Ç—å!"
//
//‚úÖ **–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ**: –¢–æ, —á—Ç–æ —É–∂–µ –ø—Ä–æ–¥—É–º–∞–Ω–æ –∏ –æ—Å—Ç–∞–ª–æ—Å—å —Ç–æ–ª—å–∫–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å.
//‚úÖ **–ö—Ä–∏—Ç–µ—Ä–∏–∏ —Ö–æ—Ä–æ—à–µ–π –∑–∞–¥–∞—á–∏**:
//‚úî **–ö–æ–Ω–∫—Ä–µ—Ç–Ω–æ—Å—Ç—å** (—Å –≥–ª–∞–≥–æ–ª–æ–º! "–ù–∞–ø–∏—Å–∞—Ç—å –ø–æ—Å—Ç", –∞ –Ω–µ "–ë–ª–æ–≥").
//‚úî **–°–≤–µ–∂–µ—Å—Ç—å** (–Ω–µ —Å—Ç–∞—Ä—à–µ –Ω–µ–¥–µ–ª–∏, –∏–Ω–∞—á–µ –ø–µ—Ä–µ—Å–º–∞—Ç—Ä–∏–≤–∞–µ–º).
//‚úî **–ü—Ä–æ—Å—Ç–æ—Ç–∞** (–Ω–µ –±–æ–ª—å—à–µ 1‚Äì2 —à–∞–≥–æ–≤).
//
//‚ùå **–û—à–∏–±–∫–∏**:
//- –î–µ–ª–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∏–∑ 300 –∑–∞–¥–∞—á (–æ–±–µ–∑—å—è–Ω–∫–∞ —Å–±–µ–∂–∏—Ç üèÉ).
//- –ü—É—Ç–∞—Ç—å –∑–∞–¥–∞—á–∏ —Å –ø—Ä–æ–µ–∫—Ç–∞–º–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–†–∞–∑—Ä–∞–±–æ—Ç–∞—Ç—å —Å–∞–π—Ç" ‚Äî —ç—Ç–æ –ø—Ä–æ–µ–∫—Ç, –∞ "–ù–∞–ø–∏—Å–∞—Ç—å —Ç–µ–∫—Å—Ç –¥–ª—è –≥–ª–∞–≤–Ω–æ–π" ‚Äî –∑–∞–¥–∞—á–∞).
//
//üí° **–°–æ–≤–µ—Ç**: –ï—Å–ª–∏ –∑–∞–¥–∞—á–∞ –≤–∏—Å–∏—Ç –¥–æ–ª—å—à–µ –Ω–µ–¥–µ–ª–∏ ‚Äî –ª–∏–±–æ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä—É–π—Ç–µ, –ª–∏–±–æ –≤—ã—á–µ—Ä–∫–Ω–∏—Ç–µ.
//
//---
//
//## üèó 2. **–ü—Ä–æ–µ–∫—Ç—ã** ‚Äî "–ù–∞–¥–æ —Å–¥–µ–ª–∞—Ç—å, –Ω–æ —Å–Ω–∞—á–∞–ª–∞ –ø–æ–¥—É–º–∞—Ç—å –ö–ê–ö"
//
//‚úÖ **–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ**: –ß—Ç–æ-—Ç–æ —Å–ª–æ–∂–Ω–æ–µ, —Ç—Ä–µ–±—É—é—â–µ–µ —Ä–∞–∑–±–∏–≤–∫–∏ –Ω–∞ —à–∞–≥–∏.
//‚úÖ **–ö–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å**:
//‚úî –•—Ä–∞–Ω–∏—Ç—å **–æ—Ç–¥–µ–ª—å–Ω–æ –æ—Ç –∑–∞–¥–∞—á** (–æ–±–µ–∑—å—è–Ω–∫–∞ –±–æ–∏—Ç—Å—è —Å–ª–æ–∂–Ω–æ–≥–æ).
//‚úî –†–∞–∑ –≤ –¥–µ–Ω—å –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –≤ **–æ—Å–æ–∑–Ω–∞–Ω–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏**.
//‚úî –í—ã–¥–µ–ª—è—Ç—å **1‚Äì2 –∑–∞–¥–∞—á–∏** –¥–ª—è –æ–±–µ–∑—å—è–Ω–∫–∏ (–Ω–µ —Ä–∞—Å–ø–∏—Å—ã–≤–∞—Ç—å –≤—Å—ë –¥–æ –º–µ–ª–æ—á–µ–π).
//
//‚ùå **–û—à–∏–±–∫–∞**: –î–µ–∫–æ–º–ø–æ–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–µ–∫—Ç –Ω–∞ 50 –∑–∞–¥–∞—á —Å—Ä–∞–∑—É (–∂–∏–∑–Ω—å –∏–∑–º–µ–Ω–∏—Ç—Å—è, –∏ –ø–æ–ª–æ–≤–∏–Ω–∞ —Å—Ç–∞–Ω–µ—Ç –Ω–µ–∞–∫—Ç—É–∞–ª—å–Ω–æ–π).
//
//---
//
//## üí° 3. **–ò–¥–µ–∏** ‚Äî "–ù–∞–¥–æ –ø–æ–¥—É–º–∞—Ç—å, –∞ —Å—Ç–æ–∏—Ç –ª–∏ –≤–æ–æ–±—â–µ –¥–µ–ª–∞—Ç—å?"
//
//‚úÖ **–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ**: –¢–æ, —á—Ç–æ –∑–≤—É—á–∏—Ç –∫—Ä—É—Ç–æ, –Ω–æ –Ω–µ —Ñ–∞–∫—Ç, —á—Ç–æ –Ω—É–∂–Ω–æ –≤–∞–º.
//‚úÖ **–ö–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å**:
//‚úî –•—Ä–∞–Ω–∏—Ç—å **–æ—Ç–¥–µ–ª—å–Ω–æ** (–Ω–µ –≤ –∑–∞–¥–∞—á–∞—Ö!).
//‚úî –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –≤ **—Ç–≤–æ—Ä—á–µ—Å–∫–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏**.
//‚úî –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–µ—Ä–µ–¥ –≤–Ω–µ–¥—Ä–µ–Ω–∏–µ–º (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ñ—Ä–∞–≥–º–µ–Ω—Ç –∫–Ω–∏–≥–∏, –∞ –Ω–µ —Å—Ä–∞–∑—É –ø–æ–∫—É–ø–∞—Ç—å).
//
//‚ùå **–û—à–∏–±–∫–∞**: –ó–∞–ø–∏—Å—ã–≤–∞—Ç—å –∏–¥–µ–∏ –∫–∞–∫ –∑–∞–¥–∞—á–∏ ("–ü—Ä–æ—á–∏—Ç–∞—Ç—å 50 –∫–Ω–∏–≥" ‚Üí —á—É–≤—Å—Ç–≤–æ –≤–∏–Ω—ã üòû).
//
//---
//
//## üîÑ –ß—Ç–æ –µ—â—ë –≤–∞–∂–Ω–æ?
//
//üìÖ **–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π —á–µ–∫-–ª–∏—Å—Ç** ‚â† —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á. –≠—Ç–æ **–Ω–∞–±–ª—é–¥–µ–Ω–∏–µ –∑–∞ –ø—Ä–∏–≤—ã—á–∫–∞–º–∏**, –∞ –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞.
//
//üóÇ **–°–ø—Ä–∞–≤–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è** ‚Äî —Ç–µ–º–∞ –¥–ª—è –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ (–Ω–æ –≥–ª–∞–≤–Ω–æ–µ ‚Äî –Ω–µ —Å–º–µ—à–∏–≤–∞—Ç—å —Å –∑–∞–¥–∞—á–∞–º–∏).
//
//---
//
//### üéØ **–í—ã–≤–æ–¥**
//- **–ó–∞–¥–∞—á–∏** = –¥–µ–ª–∞–π –±–µ–∑ —Ä–∞–∑–¥—É–º–∏–π.
//- **–ü—Ä–æ–µ–∫—Ç—ã** = –¥—É–º–∞–π, –ø–æ—Ç–æ–º –¥–µ–ª–∞–π.
//- **–ò–¥–µ–∏** = –¥—É–º–∞–π, –∞ –Ω–∞–¥–æ –ª–∏?
//
//–†–∞–∑–¥–µ–ª—è–π—Ç–µ —ç—Ç–∏ —Å—É—â–Ω–æ—Å—Ç–∏ ‚Äî –∏ –≤–∞—à–∞ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤–∑–ª–µ—Ç–∏—Ç! üöÄ
//
//–ê –∫–∞–∫ –≤—ã –æ—Ä–≥–∞–Ω–∏–∑—É–µ—Ç–µ —Å–≤–æ–∏ –¥–µ–ª–∞? –î–µ–ª–∏—Ç–µ—Å—å –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö! üëáüòä
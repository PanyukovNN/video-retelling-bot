
server:
  port: 8082
  servlet:
    context-path: /${spring.application.name}

spring:
  application:
    name: conveyor
  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
    hikari:
      schema: retelling_bot
      connection-init-sql: CREATE SCHEMA IF NOT EXISTS ${spring.datasource.hikari.schema};
  liquibase:
    enabled: true
    change-log: ./db/changelog/changelog-master.yml
  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: validate
  ai:
    openai:
      api-key: ${DEEPSEEK_API_KEY}
      base-url: https://api.deepseek.com
      chat:
        options:
          model: deepseek-chat
          temperature: 0.0
          max-tokens: 8192

retelling:
  executors:
    tg-listener:
      threads: 10
      queue-capacity: 1000
  scheduled-jobs:
    source-parsing:
      habr-cron: 0 0 * * * *
    event-processing:
      cron: 0 * * * * *
  publishing:
    chat-id: ${PUBLISHING_CHAT_ID}
    rate-tg-topic-id: ${RATE_TG_TOPIC_ID}
    debug-topic-id: ${DEBUG_TG_TOPIC_ID}
  rate:
    threshold: 70 # Оценка материала должна быть выше 70% для его публикации
  data-finder:
    habr:
      period-of-days-to-look-for: 1

  conveyor-tag-config-map:
    java-habr:
      rate-material-prompt: ${JAVA_HABR_RATE_MATERIAL_PROMPT}
      retelling-prompt: ${JAVA_HABR_RETELLING_PROMPT}
      publishing-topic-id: ${JAVA_RETELLING_TG_TOPIC_ID}
    tg-message-batch:
      rate-material-prompt: null
      retelling-prompt: ${TG_MESSAGE_BATCH_RETELLING_PROMPT}
      publishing-topic-id: ${TG_MESSAGE_BATCH_RETELLING_TG_TOPIC_ID}
  prompt:
    bot-retelling-prompt: ${BOT_RETELLING_PROMPT}

bot:
  name: ${BOT_NAME}
  token: ${BOT_TOKEN}

logging:
  level:
    root: INFO
  console:
    enabled: true
  web-logging:
    log-body: true